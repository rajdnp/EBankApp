@using EBankApp.Models;
@{
    ViewBag.Title = "Manage Accounts";
    var user = HttpContext.Current.Session[ApplicationKeys.SessionKeys.User] as User;
}

<link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap.min.css" />

<div class="p-20">
    <h2><i class="fas fa-user-cog"></i> Manage Accounts </h2>

    <p>
        @Html.ActionLink("Create New Account", "Create")
    </p>

    <hr />

    <table id="myAccountsDataTable" class="table table-striped table-bordered" style="width:100%">
        <thead>
            <tr>
                <th>AccountNumber</th>
                <th>AccountBalance</th>
                <th>AccountType</th>
                <th>Currency</th>
                <th>UserId</th>
                <th></th>
            </tr>
        </thead>
    </table>
</div>

<input type="hidden" id="getAllAccountsUrl" value="@Url.Action("GetAllAccounts", "Account")" />
<input type="hidden" id="userId" value="@user.Id" />
<input type="hidden" id="deleteAccountUrl" value="@Url.Action("DeleteAccount", "Account")" />

@Scripts.Render("~/bundles/utilities")

@section scripts
{
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap.min.js"></script>
    <script>
        $(document).ready(function () {
            let url = $("#getAllAccountsUrl").val() + "?userId=" + $("#userId").val();
            let myAccountsTable = $("#myAccountsDataTable").DataTable({
                "ajax": {
                    "url": url,
                    "type": "GET",
                    "datatype": "json"
                },
                "columnDefs": [
                    {
                        "render": function (data, type, row) {
                            return '<b>' + utilitiesApp.formatCurrency(data.AccountBalance, data.Currency) + '</b>';
                        },
                        "targets": 1
                    },
                    {
                        "render": function (data, type, row) {
                            return '<span class="delete-account" data-account-userid="' + data.UserId + '" data-account-currrency="' + data.Currency + '" data-acount-num=' + data.AccountNumber + ' href="javascript:void(0)"><i class="fas fa-trash"></i></span>';
                        },
                        "targets": 5
                    },
                    {
                        "render": function (data, type, row) {
                            return '<span>' + utilitiesApp.getAccountType(data) + '</span>';
                        },
                        "targets": 2
                    }
                ],
                "columns": [
                    { "data": "AccountNumber", "name": "AccountNumber" },
                    { "data": null, "name": "AccountBalance" },
                    { "data": "AccountType", "name": "AccountType" },
                    { "data": "Currency", "name": "Currency", "visible": false },
                    { "data": "UserId", "name": "UserId" },
                    { "data": null, "name": "", "sortable": false }
                ],
                "pageLength": 10,
                "lengthMenu": [1, 5, 10, 15, 20, 30],
                "serverSide": true,
                "scrollX": true
            });

            $("#myAccountsDataTable").on('click', '.delete-account', function () {
                let accountNumber = $(this).attr("data-acount-num");
                let currency = $(this).attr("data-account-currrency");
                let userId = $(this).attr("data-account-userid");
                let url = $("#deleteAccountUrl").val();
                $.post(url, {
                    UserId: parseInt(userId),
                    AccountNumber: accountNumber,
                    Currency: parseInt(currency)
                }).done(function (resp) {
                    if (resp.Status = "success") {
                        utilitiesApp.refreshTableWithoutPagingReset(myAccountsTable);
                    }
                }).fail(function () {

                }).always(function () {

                });
            });
        });
    </script>
}